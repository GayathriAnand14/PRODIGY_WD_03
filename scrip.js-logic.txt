const cells = document.querySelectorAll('[data-cell]');
const board = document.getElementById('board');
const messageElement = document.getElementById('message');
const restartButton = document.getElementById('restartButton');
let isCircleTurn;

const winningCombinations = [
  [0, 1, 2], [3, 4, 5], [6, 7, 8], // rows
  [0, 3, 6], [1, 4, 7], [2, 5, 8], // columns
  [0, 4, 8], [2, 4, 6]             // diagonals
];

startGame();

restartButton.addEventListener('click', startGame);

function startGame() {
  isCircleTurn = false;
  cells.forEach(cell => {
    cell.classList.remove('X');
    cell.classList.remove('O');
    cell.removeEventListener('click', handleClick);
    cell.addEventListener('click', handleClick, { once: true });
  });
  messageElement.innerText = "Player X's turn";
}

function handleClick(e) {
  const cell = e.target;
  const currentClass = isCircleTurn ? 'O' : 'X';
  placeMark(cell, currentClass);

  if (checkWin(currentClass)) {
    messageElement.innerText = `Player ${currentClass} wins!`;
    endGame();
  } else if (isDraw()) {
    messageElement.innerText = "It's a draw!";
    endGame();
  } else {
    isCircleTurn = !isCircleTurn;
    messageElement.innerText = `Player ${isCircleTurn ? 'O' : 'X'}'s turn`;
  }
}

function placeMark(cell, currentClass) {
  cell.classList.add(currentClass);
  cell.textContent = currentClass;
}

function checkWin(currentClass) {
  return winningCombinations.some(combination => {
    return combination.every(index => {
      return cells[index].classList.contains(currentClass);
    });
  });
}

function isDraw() {
  return [...cells].every(cell => {
    return cell.classList.contains('X') || cell.classList.contains('O');
  });
}

function endGame() {
  cells.forEach(cell => cell.removeEventListener('click', handleClick));
}